/*
 * generated by Xtext 2.17.0
 */
package org.xtext.example.mydsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.mydsl.myDsl.Domainmodel
import org.junit.runner.RunWith
import org.eclipse.xtext.testing.XtextRunner
import org.xtext.example.mydsl.myDsl.Entity

@RunWith(XtextRunner)
@ExtendWith(InjectionExtension)
@InjectWith(MyDslInjectorProvider)
class MyDslParsingTest {
	@Inject
	ParseHelper<Domainmodel> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			entity MyEntity {}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
	@Test
	def void parsemydsl() {
		val model = parseHelper.parse(
			"entity MyEntity {
				parent: MyEntity
			}")
		val entity = model.elements.head as Entity
		Assertions.assertSame(entity, entity.features.head.type)
	}
}
